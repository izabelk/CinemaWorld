@model CinemaWorld.Web.ViewModels.Movie.DetailsMovieViewModel
@{
    ViewBag.Title = Model.Title;
}
<div class="container">
    <div class="row">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="row">
        <div class="col-md-4">
            <img src="@Model.ImageUrl" />
        </div>
        <div class="col-md-6">
            <b>Genres: </b>
            @for (int i = 0; i < Model.Genres.Count; i++)
            {
                @Html.DisplayFor(m => m.Genres.ElementAt(i).Name)

                if (i != Model.Genres.Count - 1)
                {
                    @:,
                }
            }
            <br />
            @Html.LabelFor(m => m.Year) : @Html.DisplayFor(m => m.Year)
            <br />
            @Html.LabelFor(m => m.Country) : @Html.DisplayFor(m => m.Country)
            <br />
            @Html.LabelFor(m => m.Duration) : @Html.DisplayFor(m => m.Duration) minutes
            <br />
            @Html.LabelFor(m => m.Director) : @Html.DisplayFor(m => m.Director)
            <br />
            @Html.LabelFor(m => m.Category) : @Html.DisplayFor(m => m.Category)
            <br />
            @Html.LabelFor(m => m.Description) : @Html.DisplayFor(m => m.Description)
            <br />
            <div>
                @Html.LabelFor(m => m.Votes): <span id="laptop-votes">@Model.Votes</span>
                @if (User.Identity.IsAuthenticated && Model.UserCanVote)
                {
                    @Ajax.ActionLink("Vote", "Vote", new { id = Model.Id },
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "laptop-votes",
                        HttpMethod = "Post",
                        OnSuccess = "hideVoteButton"
                    }, new { id = "vote-button", @class = "btn" })
                }
            </div>

            @Html.LabelFor(m => m.Comments) :
            <div id="comments">
                @foreach (var comment in Model.Comments)
                    {
                    @Html.Partial("_CommentPartial", comment)
                    }
            </div>


            @if (User.Identity.IsAuthenticated)
            {
                using (Ajax.BeginForm("PostComment",
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.InsertAfter,
                        UpdateTargetId = "comments",
                        OnFailure = "commentPostFailure"
                    }))
                {
                    <div class="container">
                        @Html.ValidationSummary(true)
                    </div>
                    @Html.AntiForgeryToken()
                    @Html.Hidden("MovieId", Model.Id)
                    @Html.TextArea("Content", new { @class = "form-control" })
                    <br />
                    <input type="submit" value="Submit comment" class="btn btn-primary" />
                }
            }
        </div>
    </div>
</div>

<script>
    function commentPostFailure(err) {
        console.log(err);
    }

    function hideVoteButton() {
        $("#vote-button").hide();
    }
</script>