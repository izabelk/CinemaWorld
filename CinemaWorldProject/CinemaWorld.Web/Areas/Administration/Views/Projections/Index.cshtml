@using CinemaWorld.Web.Areas.ViewModels.Projections
@{
    ViewBag.Title = "Projections administration";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
    const string ControllerName = "Projections";
}

<h2>@ViewBag.Title</h2>

@(Html.Kendo()
    .Grid<ProjectionViewModel>()
    .Name("projections-grid")
    .Columns(cols =>
    {
        cols.Bound(p => p.Id);
       
        cols.Bound(p => p.MovieId).ClientTemplate("#= MovieName #").Title("Movie");
        cols.Bound(news => news.ShownOn).ClientTemplate("#=kendo.toString(ShownOn, 'dd/MM/yyyy HH:mm:ss')#");
        cols.Bound(p => p.HallId).ClientTemplate("#= HallNumber #").Title("Hall");
        cols.Command(com => com.Edit()).Title("Edit");
        cols.Command(com => com.Destroy()).Title("Delete");
    })
    .ColumnMenu()
    .Pageable(page => page.Refresh(true))
    .Sortable()
    .Groupable()
    .Filterable()
    .Editable(edit => edit.Mode(GridEditMode.PopUp))
    .ToolBar(toolbar => toolbar.Create())
    .DataSource(data =>
        data
            .Ajax()
            .ServerOperation(true)
            .PageSize(5)
                    .Model(model =>
                    {
                        model.Id(p => p.Id);
                        model.Field(p => p.MovieId).DefaultValue(
                            ((CinemaWorld.Web.Areas.ViewModels
                            .Movies.MovieViewModel)ViewData["defaultMovie"]).Id);
                        model.Field(p => p.HallId).DefaultValue(
                            ((CinemaWorld.Web.Areas.ViewModels
                            .Halls.HallViewModel)ViewData["defaultHall"]).Id);
                    })
            .Read(read => read.Action("Read", ControllerName))
            .Create(create => create.Action("Create", ControllerName))
            .Update(update => update.Action("Update", ControllerName))
            .Destroy(destroy => destroy.Action("Destroy", ControllerName))
            ))

